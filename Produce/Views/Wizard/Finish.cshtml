@using Infiniti.MvcControllers
@model Intelledox.Produce.FinishViewModel
@{
    int index = 0;
}
<!DOCTYPE HTML>
<html dir="@(System.Threading.Thread.CurrentThread.CurrentUICulture.TextInfo.IsRightToLeft ? "rtl" : "ltr")" lang="@(System.Threading.Thread.CurrentThread.CurrentUICulture.TwoLetterISOLanguageName )">
<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=8,IE=edge" />
    <meta name="viewport" content="width=device-width,initial-scale=1.0" />
    <title>@Html.Raw(ApplicationSettings.ThemePageTitle)</title>
    <link rel="icon" type="image/x-icon" href="~/favicon.ico" />
    <link href="~/Content/bootstrap.min.css?v=337" rel="stylesheet" type="text/css" />
    <link href="~/Content/bootstrap-theme.min.css?v=337" rel="stylesheet" />
    <link href="~/Content/Site.css?v=10.0.36" type="text/css" rel="stylesheet" />
    @if (System.Threading.Thread.CurrentThread.CurrentUICulture.TextInfo.IsRightToLeft)
    {
        <link href="~/Content/SiteRtl.css?v=9.7.3" type="text/css" rel="stylesheet" />
    }
    <script src="~/scripts/jquery-3.1.1.min.js" type="text/javascript"></script>
    <script src="~/scripts/bootstrap.min.js?v=337"></script>
    <!--[if lt IE 9]>
    <script src="@Url.Content("~/scripts/html5shiv.min.js")"></script>
    <script src="@Url.Content("~/scripts/respond.min.js")"></script>
    <![endif]-->
    @Html.Raw(ApplicationSettings.ThemeCss(Url.Content("~/")))
    @{
        var skinPublishedDate = string.Empty;
        var projectSkinPublishedDate = string.Empty;
        var projectId = string.Empty;
        var defaultLogo = "<img src=\"" + Url.Content("~/Images/produce.svg") + "\" alt=\"Infiniti Logo\" height=\"56\" width=\"165\" /><span class=\"sr-only\">Infiniti</span>";
        var skin = Intelledox.Controller.SkinController.GetTenantSkin(UserSettings.BusinessUnit);
        if (skin.HasSkinSettings)
        {
            skinPublishedDate = Intelledox.Common.DateHelper.UtcDateTimeToJsString(skin.Published);
            <link href="~/Styles/Skin?v=@skinPublishedDate" rel="stylesheet" />
            if (skin.Logo != null && skin.Logo.Length > 0)
            {
                defaultLogo = string.Empty;
            }
        }
    }
</head>
<body>
    <a id="top"></a>
    <form method="post" id="aspnetForm">
        <input type="hidden" name="ShowWorkflow" value="@Model.ShowWorkflow" />
        <input type="hidden" name="PageTitle" value="@Model.PageTitle" />
        <input type="hidden" name="PostGenerateText" value="@Model.PostGenerateText" />
        @if (Model.HeaderVisible)
        {
        <header class="navbar navbar-inverse navbar-fixed-top ix-nav" role="banner">
            <div class="container-fluid">
                <div id="navbar-header">
                    <button class="navbar-toggle collapsed" type="button" data-toggle="collapse" data-target=".ix-navbar-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>
                    @{
                        var homeUrl = "#";
                        if (Model.GoHomeVisible)
                        {
                            homeUrl = ApplicationSettings.ProduceUrl + (Infiniti.MvcControllers.ApplicationSettings.ProduceUrl.EndsWith("/")?"":"/") + "Home/GoToHome";
                        }
                    }
                    <a class="navbar-brand" href="@homeUrl" id="customLogo">
                        <div id="ixInfinitiLogo">@Html.Raw(defaultLogo)</div></a>
                </div>
                <nav class="collapse navbar-collapse ix-navbar-collapse" role="navigation">
                    <ul class="nav navbar-nav">
                        @if (Model.GoHomeVisible)
                        {
                        <li id="liGoHome">
                            <a id="lnkGoHome" href="~/Home/GoToHome">@Resources.Strings.Home</a>
                        </li>
                        }
                    </ul>
                    <p class="navbar-text form-title hidden-xs">@Model.ProjectName</p>
                    <ul class="nav navbar-nav navbar-right">
                        @if (Model.LogoutVisible)
                        {
                        <li id="LogoutMenu">
                            <a id="lnkSignOut" href="~/Account/LogOff" title="@Resources.Strings.LogOut">@Resources.Strings.LogOut</a>
                        </li>
                        }
                    </ul>
                </nav>
            </div>
        </header>
        }
        <div class="container-fluid ix-header-body wizardContent">
            <table class="NoPadding NoSpacing" style="width:100%" role="presentation">
                <tr>
                    <td style="vertical-align:top">
                        @if (!string.IsNullOrEmpty(Model.GoogleAnalyticsCode))
                        {
                            <script>
                            (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
                                (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
                                    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
                            })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

                            ga('create', '@Model.GoogleAnalyticsCode', 'auto');
                            ga('send', 'event', 'form', 'submission', '@Model.ProjectData');
                            </script>
                        }

                        <span id="WizardFinishHeader">@Html.Raw(ApplicationSettings.ThemeWizardHeader)</span>
                        <span id="lblBefore">@Html.Raw(ApplicationSettings.ThemeFinishBefore)</span>
                        @if (Model.ExpiredContentVisible)
                        {
                            <span id="lblExpiredContent">@Html.Raw(ApplicationSettings.ThemeExpiredContent)</span>
                        }
                        @if (Model.ActionFailedVisible)
                        {
                            <span id="lblActionFailed" class="finishError">@Model.ActionFailedText</span>
                        }
                        @if (Model.ErrorOccurredVisible)
                        {
                            <span id="lblErrorOccurred" class="finishError">@(string.IsNullOrEmpty(ApplicationSettings.ThemeErrorsOccurred) ? Resources.Strings.ErrorsOccurred : ApplicationSettings.ThemeErrorsOccurred)</span>
                        }
                        @if (Model.ErrorMessageVisible)
                        {
                            <span id="lblErrorOccurred" class="finishError">@Resources.Strings.FileNoLongerAvailable</span>
                        }

                        <div id="divTemplateFinish">
                            @if (Model.DocFinishVisible)
                            {
                                <div id="docFinish">
                                    <table class="NoBorder" width="100%" style="border-spacing:1px;" role="presentation">
                                        <tr>
                                            <td>
                                                <div class="action-debug">@Html.Raw(Model.ActionTroubleshootingText)</div>
                                            </td>
                                        </tr>

                                        <tr>
                                            <td class="cell-title" style="padding:5px">
                                                @Model.PageTitle
                                                @if (Model.AllowRestart)
                                                {
                                                    <a id="lnkRestart" class="pull-right" style="font-size:14px;font-weight:500" href="~/wizard/@(Request.QueryString["GroupID"])/?logguid=@(Request.QueryString["logGuid"])">@Resources.Strings.Restart</a>
                                                }
                                            </td>
                                        </tr>

                                        @if (Model.AllowDocumentDownload)
                                        {
                                            <tr>
                                                <td class="cell-heading" style="padding:5px">
                                                    <span id="lblFileSummary">@Model.FileSummaryHeading</span>
                                                    @if (Model.DownloadCount > 0)
                                                    {
                                                        <span id="dAll">&nbsp;(<a href="~/DocumentDownload.ashx/@(Resources.Strings.Documents).zip?getAll=true&JobId=@(Model.JobGuid.ToString())&logGuid=@(HttpUtility.UrlEncode(Model.LogInteractions ? Model.LogGuid.ToString() :""))" id="lnkDownloadAll" class="downloadAllLink">@Resources.Strings.DownloadAll</a>)</span>
                                                    }
                                                </td>
                                            </tr>
                                            <tr>
                                                <td class="cell-normal" style="padding:5px">
                                                    <span id="lblFiles">
                                                        @if (Model.DownloadCount == 0)
                                                        {
                                                            @Resources.Strings.NoDocs
                                                        }
                                                        else
                                                        {
                                                            <ul>
                                                                @{
                                                                    while (index < Model.CreatedDocuments.Count && index < 30)
                                                                    {
                                                                        Intelledox.Model.Document doc = Model.CreatedDocuments[index];

                                                                        if (!doc.ActionOnly)
                                                                        {
                                                                            <text>
                                                                                <li>
                                                                                    <a href="~/DocumentDownload.ashx/@(Microsoft.Security.Application.Encoder.UrlEncode(Intelledox.Common.Functions.MakeValidFileName(doc.DisplayName)) +
                                                                                    doc.Extension)?FileId=@(HttpUtility.UrlEncode(doc.DocumentId.ToString()))&Extension=@(HttpUtility.UrlEncode(doc.Extension))&JobId=@(HttpUtility.UrlEncode(Model.JobGuid.ToString()))&logGuid=@(HttpUtility.UrlEncode(Model.LogInteractions ? Model.LogGuid.ToString() :""))" class="fileDownloadLink">@(doc.DisplayName + (string.IsNullOrEmpty(doc.Extension) ? "" : " (" + doc.Extension.Substring(1) + ")"))</a>
                                                                                </li>
                                                                            </text>
                                                                        }

                                                                        index += 1;
                                                                    }
                                                                    if (Model.CreatedDocuments.Count > 30)
                                                                    {
                                                                        <text><li>@Resources.Strings.TooManyDocuments</li></text>
                                                                    }
                                                                }
                                                            </ul>
                                                            }
                                                    </span>
                                                </td>
                                            </tr>
                                            }

                                        @if (!string.IsNullOrEmpty(Model.PostGenerateText))
                                        {
                                            <tr>
                                                <td class="cell-normal" style="padding:5px;">@Html.Raw(Model.PostGenerateText)</td>
                                            </tr>
                                        }

                                        @Html.Raw(Model.CustomUIText)

                                        <tr>
                                            <td class="cell-footer" style="padding:5px;text-align:center">&nbsp;</td>
                                        </tr>
                                    </table>
                                </div>
                                                                    }

                            @if (Model.WorkflowFinishVisible)
                            {
                                    <div class="action-debug">@Html.Raw(Model.ActionTroubleshootingText)</div>                                
                                    if (Model.WorkflowDoneVisible)
                                    {
                                        <span id="lblWorkflowDone">@Html.Raw(string.IsNullOrEmpty(ApplicationSettings.ThemeWorkflowStep) ? Model.WorkflowMessage : ApplicationSettings.ThemeWorkflowStep)</span>
                                    }
                                <table class="NoBorder" width="100%" style="border-spacing:1px;" role="presentation">

                                @Html.Raw(Model.CustomUIText)
                            </table>
                            }
                        </div>
                        <span id="lblAfter">@Html.Raw(ApplicationSettings.ThemeFinishAfter)</span>
                        <span id="WizardFinishFooter">@Html.Raw(ApplicationSettings.ThemeWizardFooter)</span>

                    </td>
                </tr>
            </table>
        </div>
    </form>
</body>
</html>
